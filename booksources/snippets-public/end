return;
}
};

class vector {
private:
double local_value,*collect_in_row,*collect_in_col;
public:
vector( parallel_environment environ ) {
  collect_in_row = new double[ environ.ntids_j ];
  collect_in_col = new double[ environ.ntids_i ];
  return;
}
void row_vector_bcast_from_zero( double *input ) {
  
  return;
}
};

int main(int argc,char **argv) {
int ntids;
MPI_Comm comm;

MPI_Init(&argc,&argv);
comm = MPI_COMM_WORLD;
MPI_Comm_size(comm,&ntids);

int
  ntids_i = commandline_argument(comm,argc,argv,"pi",1),
  ntids_j = commandline_argument(comm,argc,argv,"pj",ntids);

parallel_environment environ = parallel_environment( comm,ntids_i,ntids_j );

{
  int ione = 1, size_x = ntids_j,size_y = ntids_i;
  double
    my_x,my_y, one=1.e0, zero=0.e0,
    *local_x = new double[size_x],
    *local_y = new double[size_y],
    *local_matrix = new double[size_x*size_y];
  MPI_Allgather(&my_x,1,MPI_DOUBLE,
     	  local_x,1,MPI_DOUBLE,environ.col_comm);
  // dgemv('N',size_y,size_x,
  // 	  &one,local_matrix,&size_y,
  // 	  local_x,&ione,&zero,local_y,1);
  cblas_dgemv(CblasColMajor,CblasNoTrans,
		size_y,size_x,1.e0,
		local_matrix,size_y,
		local_x,1,0.e0,local_y,1);
  MPI_Reduce_scatter(local_y,&my_y,&ione,MPI_DOUBLE,
	  MPI_SUM,environ.row_comm);
}

MPI_Finalize();
return 0;
}
